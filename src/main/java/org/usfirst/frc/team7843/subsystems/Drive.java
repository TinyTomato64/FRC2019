package org.usfirst.frc.team7843.subsystems;

import org.usfirst.frc.team7843.OI;

import edu.wpi.first.wpilibj.command.Subsystem;

import edu.wpi.first.wpilibj.SpeedControllerGroup;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;
import edu.wpi.first.wpilibj.SpeedControllerGroup;

public class Drive extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private WPI_VictorSPX victorSPX1;
    private WPI_VictorSPX victorSPX2;
    private SpeedControllerGroup driveRight;
    private WPI_VictorSPX victorSPX3;
    private WPI_VictorSPX victorSPX4;
    private SpeedControllerGroup driveLeft;
    private DifferentialDrive robotDrive4;
    OI oi = new OI();

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public Drive() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        victorSPX1 = new WPI_VictorSPX(0);
        victorSPX2 = new WPI_VictorSPX(1);
        driveRight = new SpeedControllerGroup(victorSPX1,victorSPX2);
        driveRight.setInverted(true);
        
        victorSPX3 = new WPI_VictorSPX(2);
        victorSPX4 = new WPI_VictorSPX(3);
        driveLeft = new SpeedControllerGroup(victorSPX3,victorSPX4);
        
        
        
        robotDrive4 = new DifferentialDrive(driveLeft,driveRight);
        
        robotDrive4.setSafetyEnabled(true);
        robotDrive4.setExpiration(0.1);
        robotDrive4.setMaxOutput(1.0);

       
        
        // Enable safety for the motors
        robotDrive.setSafetyEnabled(true);

        // Set maximum output speed for motors, generally cannot be more than 1.
        robotDrive.setMaxOutput(1.0);
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }


    public void periodic() {
        // Put code here to be run every loop
        robotDrive4.tankDrive(oi.getJoyYLeft(), oi.getJoyYRight());
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

